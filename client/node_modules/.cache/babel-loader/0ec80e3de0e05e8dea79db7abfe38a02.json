{"ast":null,"code":"import _classCallCheck from \"/Users/phb/Desktop/beaconave/edit-boundaries/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phb/Desktop/beaconave/edit-boundaries/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phb/Desktop/beaconave/edit-boundaries/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phb/Desktop/beaconave/edit-boundaries/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phb/Desktop/beaconave/edit-boundaries/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/phb/Desktop/beaconave/edit-boundaries/client/src/Map.js\";\nimport React, { Component } from 'react';\nvar map;\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Map)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleButton = function () {\n      var data = {\n        coords: _this.state.setCoords,\n        hood: _this.state.currentHood\n      };\n      fetch('/data/set?hood=' + data.hood + '&coords=' + data.coords).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        if (response.success) {\n          _this.setState({\n            errors: {}\n          });\n        } else {\n          _this.setState({\n            errors: \"ERROR\"\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      map = new window.google.maps.Map(document.querySelector('#map'), {\n        zoom: 14,\n        center: {\n          lat: 40.758745,\n          lng: -73.952642\n        }\n      });\n      fetch('/data').then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        map.data.addGeoJson(response);\n      });\n      map.data.setStyle({\n        fillColor: 'green',\n        strokeWeight: 1,\n        clickable: true\n      });\n      var t = this;\n      map.data.addListener('click', function (event) {\n        t.setState({\n          currentPolygon: event,\n          currentHood: event.feature.getProperty('Name')\n        });\n        document.querySelector('.selection-name').textContent = event.feature.getProperty('Name'); // var shape = event.feature.getGeometry()\n\n        var shape = [];\n\n        for (var i = 0; i < event.feature.getGeometry().getLength(); i++) {\n          var shapeData = event.feature.getGeometry().getAt(i).getArray();\n          shape.push(shapeData);\n        }\n\n        var nowEditingShape = new window.google.maps.Polygon({\n          paths: shape,\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 1,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          editable: true\n        });\n        nowEditingShape.setMap(map);\n        nowEditingShape.addListener('mouseup', function () {\n          var newShape = [];\n          this.getPaths().getArray()[0].forEach(function (coord) {\n            newShape.push(coord.lng(), coord.lat());\n          });\n          t.setState({\n            setCoords: newShape\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"map-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"selection-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Pam\"), React.createElement(\"button\", {\n        onClick: this.handleButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Set New Coords\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/phb/Desktop/beaconave/edit-boundaries/client/src/Map.js"],"names":["React","Component","map","Map","handleButton","data","coords","state","setCoords","hood","currentHood","fetch","then","res","json","response","success","setState","errors","window","google","maps","document","querySelector","zoom","center","lat","lng","addGeoJson","setStyle","fillColor","strokeWeight","clickable","t","addListener","event","currentPolygon","feature","getProperty","textContent","shape","i","getGeometry","getLength","shapeData","getAt","getArray","push","nowEditingShape","Polygon","paths","strokeColor","strokeOpacity","fillOpacity","editable","setMap","newShape","getPaths","forEach","coord","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nvar map;\n\nclass Map extends Component {\n\n  state: {\n    currentPolygon: '',\n    currentHood: '',\n    setCoords: []\n  }\n\n  handleButton = () => {\n    var data = {\n      coords: this.state.setCoords,\n      hood: this.state.currentHood\n    }\n\n    fetch('/data/set?hood=' + data.hood + '&coords=' + data.coords)\n    .then(res => res.json())\n    .then(response => {\n      if (response.success) {\n        this.setState({\n          errors: {}\n        });\n      } else {\n        this.setState({\n          errors: \"ERROR\"\n        });\n      }\n    })\n  }\n\n  componentDidMount() {\n    map = new window.google.maps.Map(document.querySelector('#map'), {\n      zoom: 14,\n      center: {lat: 40.758745, lng: -73.952642 }\n    });\n\n    fetch('/data')\n    .then(res => res.json())\n    .then(function(response) {\n      map.data.addGeoJson(response);\n    })\n\n    map.data.setStyle({\n      fillColor: 'green',\n      strokeWeight: 1,\n      clickable: true\n    });\n\n    var t = this\n\n    map.data.addListener('click', function(event) {\n      t.setState({ currentPolygon: event, currentHood: event.feature.getProperty('Name')})\n      document.querySelector('.selection-name').textContent =\n      event.feature.getProperty('Name');\n      // var shape = event.feature.getGeometry()\n      var shape = [];\n      for (var i = 0; i < event.feature.getGeometry().getLength(); i++) {\n        var shapeData = event.feature.getGeometry().getAt(i).getArray();\n        shape.push(shapeData);\n      }\n      var nowEditingShape = new window.google.maps.Polygon({\n        paths: shape,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 1,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        editable: true\n      });\n\n      nowEditingShape.setMap(map);\n      nowEditingShape.addListener('mouseup', function() {\n        var newShape = []\n        this.getPaths().getArray()[0].forEach(coord => {newShape.push(coord.lng(), coord.lat())})\n        t.setState({ setCoords: newShape })\n      })\n    });\n  }\n  render() {\n    return (\n      <div className=\"map-wrapper\">\n        <div className=\"selection-name\">Pam</div>\n        <button onClick={this.handleButton.bind(this)}>Set New Coords</button>\n        <br></br>\n        <div id=\"map\">\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}